<UserControl x:Class="CodingDojoHelper.Views.DigestView"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:am="http://schemas.amcharts.com/charts/wpf/2009/xaml"
             xmlns:Converter="clr-namespace:CodingDojoHelper.Converter" xmlns:CodingDojoHelper="clr-namespace:CodingDojoHelper" Background="Transparent" mc:Ignorable="d" Width="800" Height="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Assets/ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Converter:TimeSpanToMinutesSecondsConverter x:Key="timeSpanToMinutesSecondsConverter" />
            <Converter:TimeSpanToMillisecondsConverter x:Key="timeSpanToMillisecondsConverter" />
            <Storyboard RepeatBehavior="Forever" x:Key="ButtonGoRound">
                <DoubleAnimation Duration="0:0:8"
                             From="0" To="360"
                             Storyboard.TargetName="button"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"/>
            </Storyboard>
            <BitmapImage x:Key="YingYangImage" UriSource="../Resources/YingYang.png" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource ButtonGoRound}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Image Source="{StaticResource YingYangImage}" Width="568" Height="567" />
        <Ellipse Width="600" Height="600" StrokeThickness="16">
            <Ellipse.Stroke>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1.6">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FF040404" Offset="0.857"/>
                    <GradientStop Color="#FFD9D9D9" Offset="0.909"/>
                </LinearGradientBrush>
            </Ellipse.Stroke>
        </Ellipse>
        <Path Data="M400,10 A1,1 0 0 1 400,300" Stroke="Black" StrokeThickness="15" />
        <Path Data="M400,300 A1,1 0 0 0 400,590" Stroke="Black" StrokeThickness="15" />
        <Ellipse Width="600" Height="600" StrokeThickness="18">
            <Ellipse.Stroke>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1.6">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FF040404" Offset="0.857"/>
                    <GradientStop Color="White" Offset="0.895"/>
                </LinearGradientBrush>
            </Ellipse.Stroke>
        </Ellipse>
        <TextBlock Text="{Binding TotalRounds}" FontSize="32" Margin="513,262,116,286" />
        <TextBlock VerticalAlignment="Top" Margin="180,70,280,0" d:LayoutOverrides="Width" ToolTipService.InitialShowDelay="{StaticResource TooltipInitialShowDelay}" ToolTip="{x:Static CodingDojoHelper:Resources.ResultingAverageCycleTime}">
            <Run FontSize="140" Text="{Binding AverageCycleTime, Converter={StaticResource timeSpanToMinutesSecondsConverter}, Mode=OneTime}"/>
            <Run FontSize="32" Text="{Binding AverageCycleTime, Converter={StaticResource timeSpanToMillisecondsConverter}, Mode=OneTime}"/>
        </TextBlock>
        <am:LineChart Name="_lineChart"
                      Margin="240,0,177,-31"
                      Height="359" VerticalAlignment="Bottom"
                      PlotAreaBackground="{x:Null}"
                      IndicatorStroke="Black"
                      IndicatorBalloonForeground="#FFEFFF00"
                      BalloonForeground="#FFEFFF00"
                      BalloonBackgroundOpacity="1"
                      ToolTipService.InitialShowDelay="{StaticResource TooltipInitialShowDelay}" ToolTip="{x:Static CodingDojoHelper:Resources.AllCycleTimes}">
            <am:LineChart.CategoryAxisGrid>
                <am:CategoryGrid CountHint="3"/>
            </am:LineChart.CategoryAxisGrid>
            <am:LineChart.CategoryAxis>
                <am:CategoryAxis SkipFirstValue="True" SkipLastValue="True"/>
            </am:LineChart.CategoryAxis>
            <am:LineChart.LeftValueAxis>
                <am:ValueAxis DurationInputFormat="Minutes" SkipLastValue="True" ValuesInside="True"/>
            </am:LineChart.LeftValueAxis>
            <am:LineChart.Graphs>
                <am:LineChartGraph Name="_cycleTimeLineChartGraph" BulletType="RoundOutline" Brush="Black" BulletSize="8" />
                <am:LineChartGraph Name="_averageTimeLineChartGraph" Brush="Green" />
            </am:LineChart.Graphs>
        </am:LineChart>
        <Button x:Name="button" Click="Button_Click" Template="{DynamicResource KombatEndButton}" RenderTransformOrigin="0.5,0.5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <!-- Button goes round, reflexion should stay -->
        <Ellipse Width="80" Height="80" StrokeThickness="6">
            <Ellipse.Stroke>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1.6">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FF0F0F0F" Offset="0.832"/>
                    <GradientStop Color="#FFE5E5E5" Offset="0.879"/>
                </LinearGradientBrush>
            </Ellipse.Stroke>
        </Ellipse>
    </Grid>
</UserControl>
